name: Release Trigger

on:
  push:
    branches:
      - main
    paths:
      - .github/version-manifest.yaml
  workflow_dispatch:
env:
  DEPENDENCY_WORKFLOW: 'parent-release.yaml'
  ARTIFACTS_PATH: 'dist/'

jobs:
  parse-version-manifest:
    name: Parse Version Manifest
    runs-on: ubuntu-latest
    outputs: 
      dependencies: ${{ steps.parse_manifest.outputs.dependencies }}
      version: ${{ steps.parse_manifest.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version manifest
        id: parse_manifest
        run: |
          # Install yq for YAML parsing
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          manifest_json=$(yq eval '.dependencies[]' .github/version-manifest.yaml -o json)
          echo "manifest_json=$manifest_json"

          dependencies=$(echo $manifest_json | jq -s '[.[] | to_entries[] | {name: .key, repo: .value.repo, version: .value.version}]')
          echo "dependencies=$dependencies"
          echo "$dependencies" | jq .

          dependencies=$(echo $dependencies | tr -d '\n')
          echo "dependencies=$dependencies" >> $GITHUB_OUTPUT
          
          VERSION=$(yq eval '.parent.version' .github/version-manifest.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version=$VERSION"

      - name: Log outputs
        run: |
          echo "Version: ${{ steps.parse_manifest.outputs.version }}"
          echo "Dependencies: ${{ steps.parse_manifest.outputs.dependencies }}"
       
  tag-parent: 
    name: Tag Parent Repository
    runs-on: ubuntu-latest
    needs: [parse-version-manifest]
    if: needs.parse-version-manifest.outputs.version != ''
    steps:
      - name: Tag Parent Repository
        uses: gntouts/tag-remote-repo-action@v1.0.0
        id: tag_parent
        with:
          repository: ${{ github.repository }}
          tag: ${{ needs.parse-version-manifest.outputs.version }}
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          skip_update: true
      - name: Log outputs
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Version: ${{ steps.tag_parent.outputs.tag }}"
          echo "result: ${{steps.tag_parent.outputs.result}}
          echo "message: ${{steps.tag_parent.outputs.message}}
          echo "tag: ${{steps.tag_parent.outputs.tag}}
          echo "commit: ${{steps.tag_parent.outputs.commit}}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: tag-parent  # Only run after tagging is complete
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: false
        
    - name: Create VERSION file
      run: |
        echo "${GITHUB_REF#refs/tags/}" > VERSION
        cat VERSION
    
    - name: Download dependencies
      run: go mod download
      
    - name: Run unit tests
      run: make test-unit
      
    - name: Run functional tests
      run: make test-functional

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: [test, parse-version-manifest]  # Only run after tests pass
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        cache: false
    - name: Create VERSION file
      run: echo "${GITHUB_REF#refs/tags/}" > VERSION
    
    - name: Download dependencies
      run: go mod download
      
    - name: Build binaries for all platforms
      run: make build-all

    - name: Upload build artifacts # This step is required by the children workflows to access the build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-${{needs.parse-version-manifest.outputs.version}}
        path: ${{ env.ARTIFACTS_PATH }}
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, parse-version-manifest]
    if: needs.parse-version-manifest.outputs.version != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts-${{needs.parse-version-manifest.outputs.version}}
          path: ${{ env.ARTIFACTS_PATH }}
          merge-multiple: true
      - name: Create initial release
        uses: softprops/action-gh-release@v2
        id: create_release
        with:
          files: |
            dist/*
          body: |
            ## Release ${{needs.parse-version-manifest.outputs.version}}
            
            ### Changes
            - Automated release from tag ${{needs.parse-version-manifest.outputs.version}}
            - Dependencies updated from version manifest
            - Triggered by workflow run ${{ github.run_id }}
          name: Release ${{needs.parse-version-manifest.outputs.version}}
          draft: false
          prerelease: true
          generate_release_notes: true
          tag_name: ${{needs.parse-version-manifest.outputs.version}}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

  trigger-depencies-workflows:
    name: Trigger Dependency Workflows
    runs-on: ubuntu-latest
    needs: [release, parse-version-manifest]
    if: needs.parse-version-manifest.outputs.dependencies != ''
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        dependency: ${{ fromJson(needs.parse-version-manifest.outputs.dependencies) }}
    steps:
      - name: Tag Dependency Repository
        id: tag_dependency
        uses: gntouts/tag-remote-repo-action@v1.0.0
        with:
          repository: ${{ matrix.dependency.repo }}
          tag: ${{ matrix.dependency.version }}
          token: ${{ secrets.MY_GITHUB_TOKEN }}
      - name: Log outputs
        run: |
          echo "Dependency: ${{ matrix.dependency.name }}"
          echo "Repository: ${{ matrix.dependency.repo }}"
          echo "Version: ${{ matrix.dependency.version }}"
          echo "result: ${{steps.tag_dependency.outputs.result}}
          echo "message: ${{steps.tag_dependency.outputs.message}}
          echo "tag: ${{steps.tag_dependency.outputs.tag}}
          echo "commit: ${{steps.tag_dependency.outputs.commit}}
      - name: Trigger release workflow in dependency repository
        id: trigger-dependency
        uses: the-actions-org/workflow-dispatch@v4
        env:
          RUN_NAME: >-
            Update External Repo ${{ github.repository }}
            [Run ID: ${{ github.run_id }}]
        with:
          workflow: ${{ env.DEPENDENCY_WORKFLOW }}
          ref: ${{ matrix.dependency.version }}
          repo: ${{ matrix.dependency.repo }}
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          run-name: ${{ env.RUN_NAME }}
          inputs: >-
            {
              "run-name": "${{ env.RUN_NAME }}",
              "trigger-id": "${{ github.run_id }}",
              "calling-repo": "${{ github.repository }}",
              "release-tag": "${{needs.parse-version-manifest.outputs.version}}"
            }
          display-workflow-run-url-interval: 10s
          display-workflow-run-url-timeout: 2m
          wait-for-completion-interval: 10s
          wait-for-completion-timeout: 20m
          workflow-logs: json-output
